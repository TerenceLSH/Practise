from mpl_toolkits import mplot3d
import matplotlib.pyplot as plt
import numpy as np
from numpy.polynomial import polynomial as P

#Q1
x1=np.linspace(-2,2)
x2=np.linspace(-np.pi,2*np.pi)
x3=np.linspace(-2,4,1000)

plt.subplots_adjust(wspace=0.4,hspace=0.4)
#a
a=[5,0,-1.5,3]
b= P.polyval(x1,a)
plt.subplot(2,2,1)
plt.title('Q1a')
plt.plot(x1,b)
plt.xticks([-2,-1,0,1,2])
#b
plt.subplot(2,2,2)
bbbb=np.sin(x2)+np.cos(x2)**2
plt.title('Q1b')
plt.plot(x2,bbbb)
plt.axis([(-1*np.pi-0.5),(2*np.pi+0.5),-1.5,1.5])
plt.xticks([(-1*np.pi),0,(np.pi),(2*np.pi)],['-pi','0','pi','2pi'])
#c
rew=x1*(np.exp(x1))
plt.subplot(2,2,3)
plt.title('Q1c')
plt.plot(x1,rew)
plt.xticks(ticks=[-2,-1,0,1,2])
#d
wer=np.sin(np.exp(x3))
plt.subplot(2,2,4)
plt.title('Q1d')
plt.plot(x3,wer)
plt.xticks(ticks=[-2,0,2,4])


#Q2
V=[10,20,60,131,250,410,525]
C = [3.2,6.1,15.6,29.7,51.2,77.5,112.4]
plt.plot(V,C)
plt.ylabel('Angular Velocity(RPM)')
plt.title('Q2:Conveyor capacity to the motor angular velocity test')
plt.xlabel('Capacity(kg/s)')

#Q3
test = [12, 37, 87, 70, 70, 19, 45, 59, 91, 21, 25, 27, 76, 46, 46, 51, 22, 80, 30, 23,\
 48, 68, 31, 60, 41, 44, 77, 65, 23, 57, 38, 76, 18, 22, 47, 35, 91, 51, 65, 56,\
 69, 45, 75, 23, 67, 28, 58, 21, 53, 21, 78, 75, 68, 75, 29, 30, 32, 58, 95, 80]

#a
plt.hist(test,bins=10,rwidth=0.8)
plt.title('3a:Mark distribution')
plt.xticks([10,20,30,40,50,60,70,80,90])
plt.yticks([0,5,10])

#b
plt.hist(test,bins=np.arange(0,100.1,10),rwidth=0.8)
plt.xticks(np.arange(0, 100.1, 10))
plt.title("3b: Mark Distribution")

#Q4
ax=plt.axes(projection="3d")
x=np.linspace(-50,50)
y=x

X,Y=np.meshgrid(x,y)
r=(X**2+Y**2)**(1/3)
z=(r**2)*(np.cos(r))
ax.plot_surface(X,Y,z,cmap=plt.cm.YlGnBu_r)

#Q5
Abb=np.array(([1,6,8],[2,4,1],[4,8,6]))
#a
print(np.linalg.det(Abb))
#b
print(np.linalg.inv(Abb))
#c
product=Abb.prod(axis = 0)
print(product)

#d
cum= Abb.cumsum(axis=1)
print(cum)

print(cum[:,2])


#Q6
Ans = np.array(([-1,3,0],[3,4,-4],[-20,-12,5]))
Cns = np.array(([-72],[-4],[-50]))
invA = np.linalg.inv(Ans)
XXX=np.matmul(invA,Cns)
print(XXX)

#Q7
fx=P.Polynomial([48,-14,1])
gx=P.Polynomial([-102,31,19,-9,1])
#Qa
print(fx.roots())
print(gx.roots())
#Qb
fx=np.array([48,-14,1])
gx=np.array([-102,31,19,-9,1])
yryr= P.polydiv(gx,fx)
print(yryr)
#Qc

H = P.polymul(fx,gx)
print(H)


